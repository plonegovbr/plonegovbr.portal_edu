# Generated from:
# https://github.com/plone/meta/tree/master/config/default
# See the inline comments on how to expand/tweak this configuration file
name: Meta
on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

jobs:
  qa:
    uses: plone/meta/.github/workflows/qa.yml@portalbrasil
  test:
    uses: plone/meta/.github/workflows/test.yml@portalbrasil
  coverage:
    uses: plone/meta/.github/workflows/coverage.yml@portalbrasil
  release-ready:
    uses: plone/meta/.github/workflows/release_ready.yml@portalbrasil

  other-test:
    name: Other report
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ${{ fromJSON(vars.TEST_PYTHON_VERSIONS) }}
        os: ${{ fromJSON(vars.TEST_OS_VERSIONS) }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('tox.ini') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: python -m pip install tox
      - name: Initialize tox
        run: |
          if [ `tox list --no-desc -f init|wc -l` = 1 ]; then tox -e init;else true; fi
      - name: Run tests
        run: |
          tox -e test


  image:
    runs-on: ubuntu-latest
    needs:
      - qa
      - test
      - coverage
      - release-ready

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: "Metadados da Imagem Docker"
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ vars.IMAGE_NAME }}
          labels: |
            org.label-schema.docker.cmd=docker run -d -p 8080:8080 ${{ vars.IMAGE_NAME }}:latest
          flavor:
            latest=false
          tags: |
            type=ref,event=branch
            type=sha
            type=raw,value=latest,enable={{ is_default_branch }}

      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v2

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v2

      - name: "Login no ghcr.io"
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Usa o mxdev para baixar dependÃªncias"
        run: |
          pip install mxdev
          mxdev -c mx.ini

      - name: "Gera imagem e publica no ghcr.io"
        uses: docker/build-push-action@v3
        with:
          context: ./
          platforms: linux/amd64,linux/arm64
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

##
# Specify additional jobs in .meta.toml:
#  [github]
#  additional_jobs = """
#  another:
#    uses: org/repo/.github/workflows/file.yml@main
#  """
##
